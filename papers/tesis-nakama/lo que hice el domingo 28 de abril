import numpy
import cv
import pylab

im = cv.LoadImageM('tigre.jpg')

lab_im = cv.CreateImage(cv.GetSize(im), cv.IPL_DEPTH_8U, 3)

cv.CvtColor(im, lab_im, cv.CV_BGR2Lab)

cv.SaveImage('tigre_lab.jpg', lab_im)

lab_im[1,1]



pylab.figure()
f=_
pylab.plot??
lab_im.depth
lab_im.height
for nfil in range(lab_im.height):
    for ncol in range(lab_im.width):
        pass
pylab.plot([1,2,3,4],[1,2,3,4],[10,20,30,40])
pylab.plot([1,2,3,4],[1,2,3,4],[10,20,30,40])
pylab.plot??
f
ax=f.gca(projection='3d')
x = [1,2,3,4]
y = [1,2,3,4]
from mpl_toolkits.mplot3d import Axes3D
ax=f.gca(projection='3d')
ax.plot??
ax.plot(x,y,[10,20,30,40])
pylab.show()
f=pylab.figure()
ax=f.gca(projection='3d')
ax.plot(x,y,[10,20,30,40])
lab_im_L = []
for nfil in range(lab_im.height):
    for ncol in range(lab_im.width):
        lab_im_L.append(lab_im[nfil,nrow])
for nfil in range(lab_im.height):
    for ncol in range(lab_im.width):
        lab_im_L.append(lab_im[nfil,ncol])
lab_im_a = []
for nfil in range(lab_im.height):
    for ncol in range(lab_im.width):
        lab_im_a.append(lab_im[nfil,ncol][1])
lab_im_a
lab_im_L = []
for nfil in range(lab_im.height):
    for ncol in range(lab_im.width):
        lab_im_L.append(lab_im[nfil,ncol][0])
lab_im_b = []
for nfil in range(lab_im.height):
    for ncol in range(lab_im.width):
        lab_im_b.append(lab_im[nfil,ncol][2])
len(lab_im_L)
len(lab_im_a)
len(lab_im_b)
f
ax
ax.plot(lab_im_L, lab_im_a, lab_im_b)
pylab.show()
ax.plot_surface(lab_im_L, lab_im_a, lab_im_b)
pylab.show()
f=pylab.figure()
ax=f.gca(projection='3d')
ax.plot_surface(lab_im_L, lab_im_a, lab_im_b)
pylab.show()
import numpy
numpy.meshgrid??
numpy.meshgrid([1,2,3,4],[5,6,7,8])
numpy.meshgrid??
ax.plot_surface??
ax.images??
pylab.imag??
pylab.imshow??
mat = numpy.matrix??
mat = numpy.matrix()
lab_im
lab_im[:,:]
lab_im[:,:,0]
mat=lab_im[:,:]
cv.cvmat??
cv.cvmat
cv.cvmat()
cv.CreateMat??
cv.CreateMat(lab_im.height, lab_im.width)
cv.CreateMat(lab_im.height, lab_im.width, 3)
cv.CreateMat(lab_im.height, lab_im.width, im.type)
mat=cv.CreateMat(lab_im.height, lab_im.width, im.type)
mat[0,0]
